$(document).ready(function(){$(".carousel").carousel({interval:3e3,pause:null}),function(e,i){e.widget("app.slider",e.ui.slider,{options:{ticks:!1},_create:function(){if(this._super(),this.options.ticks&&!(this.options.step<5))for(var i,s=this.options.min+this.options.step,t=this.element.css("border-color");s<this.options.max;)i=(s/this.options.max*100).toFixed(2)+"%",e("<div/>").addClass("ui-slider-tick").appendTo(this.element).css({left:i,background:t}),s+=this.options.step}}),e(function(){function i(e){return(e+"").split("").reverse().join("").replace(/(\d{3})/g,"$1,").split("").reverse().join("").replace(/^ /,"")}e("#slider").slider({value:0,range:"min",min:0,max:27e3,step:3e3,ticks:!0,slide:function(s,t){e("#amount").val(i(t.value))}}),e(".ui-slider-handle").append("<input class='value text-center' id='amount' readonly/>"),e("#amount").val(e("#slider").slider("value"))})}(jQuery)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJjYXJvdXNlbCIsImludGVydmFsIiwicGF1c2UiLCJ1bmRlZmluZWQiLCJ3aWRnZXQiLCJ1aSIsInNsaWRlciIsIm9wdGlvbnMiLCJ0aWNrcyIsIl9jcmVhdGUiLCJ0aGlzIiwiX3N1cGVyIiwic3RlcCIsImxlZnQiLCJjbnQiLCJtaW4iLCJiYWNrZ3JvdW5kIiwiZWxlbWVudCIsImNzcyIsIm1heCIsInRvRml4ZWQiLCJhZGRDbGFzcyIsImFwcGVuZFRvIiwiZm9ybWF0TnVtYmVyIiwibiIsInNwbGl0IiwicmV2ZXJzZSIsImpvaW4iLCJyZXBsYWNlIiwidmFsdWUiLCJyYW5nZSIsInNsaWRlIiwiZXZlbnQiLCJ2YWwiLCJhcHBlbmQiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJBQUFBQSxFQUFHQyxVQUFXQyxNQUFPLFdBRWpCRixFQUFHLGFBQWNHLFVBQ2JDLFNBQVUsSUFDVkMsTUFBTyxPQUlYLFNBQVlMLEVBQUdNLEdBR1hOLEVBQUVPLE9BQVEsYUFBY1AsRUFBRVEsR0FBR0MsUUFHekJDLFNBQ0lDLE9BQU8sR0FJWEMsUUFBUyxXQU9MLEdBSkFDLEtBQUtDLFNBSUNELEtBQUtILFFBQVFDLFNBQVNFLEtBQUtILFFBQVFLLEtBQU8sR0FTaEQsSUFKQSxHQUVJQyxHQUZBQyxFQUFNSixLQUFLSCxRQUFRUSxJQUFNTCxLQUFLSCxRQUFRSyxLQUN0Q0ksRUFBYU4sS0FBS08sUUFBUUMsSUFBSyxnQkFHM0JKLEVBQU1KLEtBQUtILFFBQVFZLEtBR3ZCTixHQUFTQyxFQUFNSixLQUFLSCxRQUFRWSxJQUFNLEtBQU1DLFFBQVMsR0FBTSxJQUt2RHZCLEVBQUcsVUFBV3dCLFNBQVUsa0JBQ25CQyxTQUFVWixLQUFLTyxTQUNmQyxLQUFPTCxLQUFNQSxFQUFNRyxXQUFZQSxJQUVwQ0YsR0FBT0osS0FBS0gsUUFBUUssUUFLaENmLEVBQUcsV0FnQkMsUUFBUzBCLEdBQWNDLEdBQ25CLE9BQVFBLEVBQUksSUFBSUMsTUFBTyxJQUFLQyxVQUFVQyxLQUFNLElBQUtDLFFBQVMsV0FBWSxPQUFRSCxNQUFPLElBQUtDLFVBQVVDLEtBQU0sSUFBS0MsUUFBUyxLQUFNLElBaEJsSS9CLEVBQUcsV0FBWVMsUUFDWHVCLE1BQU8sRUFDUEMsTUFBTyxNQUNQZixJQUFLLEVBQ0xJLElBQUssS0FDTFAsS0FBTSxJQUNOSixPQUFPLEVBQ1B1QixNQUFPLFNBQVdDLEVBQU8zQixHQUNyQlIsRUFBRyxXQUFZb0MsSUFBS1YsRUFBY2xCLEVBQUd3QixXQUc3Q2hDLEVBQUcscUJBQXNCcUMsT0FBUSwyREFDakNyQyxFQUFHLFdBQVlvQyxJQUFLcEMsRUFBRyxXQUFZUyxPQUFRLGFBTy9DNkIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoIGRvY3VtZW50ICkucmVhZHkoIGZ1bmN0aW9uICgpIHtcclxuICAgIC8qIENhcm91c2VsICovXHJcbiAgICAkKCAnLmNhcm91c2VsJyApLmNhcm91c2VsKCB7XHJcbiAgICAgICAgaW50ZXJ2YWw6IDMwMDAsXHJcbiAgICAgICAgcGF1c2U6IG51bGxcclxuICAgIH0gKTtcclxuXHJcbiAgICAvKiBTbGlkZXIgKi9cclxuICAgIChmdW5jdGlvbiAoICQsIHVuZGVmaW5lZCApIHtcclxuICAgICAgICBcclxuICAgICAgICAvLyBEZWZpbmVzIHRoZSBjdXN0b20gaW1wbGVtZW50YXRpb24gb2YgdGhlIGJ1aWx0LWluIHNsaWRlciB3aWRnZXQuXHJcbiAgICAgICAgJC53aWRnZXQoIFwiYXBwLnNsaWRlclwiLCAkLnVpLnNsaWRlciwge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gVGhlIG5ldyBcInRpY2tzXCIgb3B0aW9uIGRlZmF1bHRzIHRvIGZhbHNlLlxyXG4gICAgICAgICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICB0aWNrczogZmFsc2VcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIENhbGxlZCB3aGVuIHRoZSBzbGlkZXIgaXMgaW5zdGFudGlhdGVkLlxyXG4gICAgICAgICAgICBfY3JlYXRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vIENhbGwgdGhlIG9yaWdpbmFsIGNvbnN0cnVjdG9yLCBjcmVhdGluZyB0aGUgc2xpZGVyIG5vcm1hbGx5LlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3VwZXIoKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIFwidGlja3NcIiBvcHRpb24gaXMgZmFsc2Ugb3IgdGhlIFwic3RlcFwiIG9wdGlvbiBpc1xyXG4gICAgICAgICAgICAgICAgLy8gbGVzcyB0aGFuIDUsIHRoZXJlJ3Mgbm90aGluZyB0byBkby5cclxuICAgICAgICAgICAgICAgIGlmICggIXRoaXMub3B0aW9ucy50aWNrcyB8fCB0aGlzLm9wdGlvbnMuc3RlcCA8IDUgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyBTZXR1cCBzb21lIHZhcmlhYmxlcyBmb3IgcmVuZGVyaW5nIHRoZSB0aWNrIG1hcmtzIGJlbG93IHRoZSBzbGlkZXIuXHJcbiAgICAgICAgICAgICAgICB2YXIgY250ID0gdGhpcy5vcHRpb25zLm1pbiArIHRoaXMub3B0aW9ucy5zdGVwLFxyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQgPSB0aGlzLmVsZW1lbnQuY3NzKCBcImJvcmRlci1jb2xvclwiICksXHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgd2hpbGUgKCBjbnQgPCB0aGlzLm9wdGlvbnMubWF4ICkge1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIENvbXB1dGUgdGhlIFwibGVmdFwiIENTUyBwcm9wZXJ0eSBmb3IgdGhlIG5leHQgdGljayBtYXJrLlxyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQgPSAoIGNudCAvIHRoaXMub3B0aW9ucy5tYXggKiAxMDAgKS50b0ZpeGVkKCAyICkgKyBcIiVcIjtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAvLyBDcmVhdGVzIHRoZSB0aWNrIGRpdiwgYW5kIGFkZHMgaXQgdG8gdGhlIGVsZW1lbnQuIEl0IGFkZHMgdGhlXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gXCJ1aS1zbGlkZXItdGlja1wiIGNsYXNzLCB3aGljaCBoYXMgY29tbW9uIHByb3BlcnRpZXMgZm9yIGVhY2ggdGljay5cclxuICAgICAgICAgICAgICAgICAgICAvLyBJdCBhbHNvIGFwcGxpZXMgdGhlIGNvbXB1dGVkIENTUyBwcm9wZXJ0aWVzLCBcImxlZnRcIiBhbmQgXCJiYWNrZ3JvdW5kXCIuXHJcbiAgICAgICAgICAgICAgICAgICAgJCggXCI8ZGl2Lz5cIiApLmFkZENsYXNzKCBcInVpLXNsaWRlci10aWNrXCIgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuYXBwZW5kVG8oIHRoaXMuZWxlbWVudCApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jc3MoIHsgbGVmdDogbGVmdCwgYmFja2dyb3VuZDogYmFja2dyb3VuZCB9ICk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgY250ICs9IHRoaXMub3B0aW9ucy5zdGVwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSApO1xyXG4gICAgICAgIFxyXG4gICAgICAgICQoIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCggXCIjc2xpZGVyXCIgKS5zbGlkZXIoIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlOiAwLFxyXG4gICAgICAgICAgICAgICAgcmFuZ2U6IFwibWluXCIsXHJcbiAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICBtYXg6IDI3MDAwLFxyXG4gICAgICAgICAgICAgICAgc3RlcDogMzAwMCxcclxuICAgICAgICAgICAgICAgIHRpY2tzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgc2xpZGU6IGZ1bmN0aW9uICggZXZlbnQsIHVpICkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoIFwiI2Ftb3VudFwiICkudmFsKCBmb3JtYXROdW1iZXIoIHVpLnZhbHVlICkgKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSApO1xyXG4gICAgICAgICAgICAkKCBcIi51aS1zbGlkZXItaGFuZGxlXCIgKS5hcHBlbmQoIFwiPGlucHV0IGNsYXNzPSd2YWx1ZSB0ZXh0LWNlbnRlcicgaWQ9J2Ftb3VudCcgcmVhZG9ubHkvPlwiICk7XHJcbiAgICAgICAgICAgICQoIFwiI2Ftb3VudFwiICkudmFsKCAkKCBcIiNzbGlkZXJcIiApLnNsaWRlciggXCJ2YWx1ZVwiICkgKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEZvcm1hdCBudW1iZXIgZnJvbSAxNTAwMCB0byAxNSwwMDBcclxuICAgICAgICAgICAgZnVuY3Rpb24gZm9ybWF0TnVtYmVyKCBuICkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChuICsgXCJcIikuc3BsaXQoIFwiXCIgKS5yZXZlcnNlKCkuam9pbiggXCJcIiApLnJlcGxhY2UoIC8oXFxkezN9KS9nLCBcIiQxLFwiICkuc3BsaXQoIFwiXCIgKS5yZXZlcnNlKCkuam9pbiggXCJcIiApLnJlcGxhY2UoIC9eIC8sIFwiXCIgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gKTtcclxuICAgIH0pKCBqUXVlcnkgKTtcclxufSApOyJdfQ==
